
> mongo_blog@1.0.0 test
> npm run test:setup && npm run test:run


> mongo_blog@1.0.0 test:setup
> export NODE_ENV=test && npm run mongo


> mongo_blog@1.0.0 mongo
> npm run mongo:restart && node test/db_check.js && npm run seed


> mongo_blog@1.0.0 mongo:restart
> npm run mongo:stop; npm run mongo:start


> mongo_blog@1.0.0 mongo:stop
> docker container stop mongo-sandbox

mongo-sandbox

> mongo_blog@1.0.0 mongo:start
> export DB_NAME=mongo_blog && docker run --rm -d -p 27017:27017 --name=mongo-sandbox -e MONGO_INITDB_DATABASE=$DB_NAME mongo:5

a367f98e3ea9621311adb9dd965dea7c1a2ba0d43cf8d83eecec9a5673b45e59
WAITING FOR MONGO TO START
WAITING 1 SEC

> mongo_blog@1.0.0 seed
> node seed/seed.js

[33mSEEDING MONGODB LOCAL DB[0m
[35mUsing Test Username/Password
[0m

> mongo_blog@1.0.0 test:run
> mocha **/test.js --exit $WATCH



  Mongo Blog
    Static Files
      âœ” should serve CSS
    HTML Routes
      Unauthenticated
        GET / - index page showing all posts
          âœ” should NOT render new post and logout links (89ms)
          âœ” should render all post titles as links to post
          âœ” should render dates of posts, format: Thu, Oct 26, 2000
        GET /?tag={tag} - index page showing all posts by tag
          âœ” should render with non-existent tag
          âœ” should render only posts of tag: guides
          âœ” should NOT render new post and logout links
          âœ” should render only posts of tag: musings
          âœ” should NOT render new post and logout links
        GET /post/:slug - view post
          âœ” should render all posts by slug (92ms)
          âœ” should render all post pages WITHOUT new post and logout links (70ms)
          âœ” should render all post comments (69ms)
          âœ” should render all post comments' author and date, format: 01/01/2000 (60ms)
        GET /admin - redirect route
          âœ” should redirect to login page
        GET /admin/login - login page
          âœ” should render HTML
        GET /admin/create-post - new post page
          âœ” should redirect to login page
        GET /admin/edit-post/:slug - edit post page
          âœ” should redirect to login page
      Authenticated
        GET / - index page
          âœ” should render new post and logout links
          âœ” should show edit and delete options for each post
        GET /?tag={tag} - index page showing all posts by tag
          âœ” should render new post and logout links
          âœ” should show edit and delete options for each post
        GET /post/:slug - view post
          âœ” should render all post pages with new post and logout links (93ms)
          âœ” should render all post comments with remove option (81ms)
        GET /admin - redirect route
          âœ” should redirect to index page
        GET /admin/login - login page
          âœ” should redirect to index page
        GET /admin/create-post - new post page
          âœ” should render create post page
        GET /admin/edit-post/:slug - edit post page
          âœ” should render edit post page for each post with pre-filled title (72ms)
          âœ” should render edit post page for each post with pre-filled body (72ms)
          âœ” should render edit post page for each post with pre-filled tags (74ms)
    API Routes
      Unauthenticated
        POST /api/login - login admin user
          âœ” should log user in with correct username/pass and redirect to / (67ms)
          âœ” should redirect user to /admin/login?error=true with INCORRECT username
          âœ” should redirect user to /admin/login?error=true with INCORRECT password (60ms)
        GET /api/logout - logout admin user
          âœ” should log user out and redirect to / (66ms)
        POST /api/post/:postId/comment - add comment to post
          âœ” should add comment to specific post
          âœ” should add comment to specific post with Anonymous author if author omitted
          âœ” should return 400 if no body is included
        DELETE /api/post/:postId/comment/:id - delete comment from post
          âœ” should redirect to login page
        POST /api/post - new post
          âœ” should redirect to login page
        PUT /api/post/:id - edit post
          âœ” should redirect to login page
        DELETE /api/post/:id - delete post
          âœ” should redirect to login page
      Authenticated
        DELETE /api/post/:postId/comment/:id - delete comment from post
          âœ” should remove comment from post
        POST /api/post - new post
          âœ” should add post
          âœ” should add tag ids to post if included
          âœ” should return 400 if title not included
          âœ” should return 400 if body not included
        PUT /api/post/:id - edit post
          âœ” should allow editing title
          âœ” should allow editing body
          âœ” should overwrite tags with new tags
          âœ” should remove all tags if tags are omitted
          âœ” should return 400 if body is omitted
          âœ” should return 400 if title is omitted
        DELETE /api/post/:id - delete post
          âœ” should delete post


  52 passing (2s)

